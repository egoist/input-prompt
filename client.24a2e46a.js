webpackJsonp([1],[,function(e,t,n){e.exports=n(2)},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var n in t)e.style[n]=t[n]}function r(e){n(4),n(5),n(6)}Object.defineProperty(t,"__esModule",{value:!0});var l=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o={right:39,tab:9},s=function(){function e(t){a(this,e),this.el=t,this.rules=[]}return l(e,[{key:"addRule",value:function(e){this.rules.push(e)}},{key:"init",value:function(){var e=this;this.wrapper=document.createElement("div"),this.wrapper.className="input-prompt",i(this.wrapper,{position:"relative",height:this.el.clientHeight+"px"}),this.el.parentNode.insertBefore(this.wrapper,this.el),this.el.parentNode.removeChild(this.el),this.wrapper.appendChild(this.el),i(this.el,{position:"absolute",zIndex:1,backgroundColor:"transparent"}),this.fakeEl=document.createElement(this.el.tagName),this.fakeEl.className=this.el.className+" fake-input",i(this.fakeEl,{position:"absolute",left:this.el.offsetLeft+"px",zIndex:0,color:"#999"}),this.wrapper.appendChild(this.fakeEl),this.el.addEventListener("input",function(t){e.currentValue=t.target.value,e.applyRule()}),this.el.addEventListener("keydown",function(t){t.which!==o.right&&t.which!==o.tab||e.el.value!==e.fakeEl.value&&(t.preventDefault(),e.el.value=e.fakeEl.value)})}},{key:"applyRule",value:function(){var e=this,t=this.currentValue;this.rules.forEach(function(n){var a=n.match.exec(e.currentValue);if(a){var i=n.handler(a);null!=i&&!1!==i&&(t=i)}}),this.fakeEl.value=t}}]),e}(),u=s,c=n(8),p=(n.n(c),n(9)),h=n.n(p),m=n(10),d=n.n(m),f=["gmail.com","hotmail.com","qq.com","live.com","outlook.com"],v="\nconst domains = [\n  'gmail.com',\n  'hotmail.com',\n  'qq.com',\n  'live.com',\n  'outlook.com'\n]\n\n// which input element to control?\nconst prompt = new InputPrompt(document.getElementById('email'))\n\nprompt.addRule({\n  // execute this rule when input value matches the regular expression\n  match: /([^@]+@)([^$]+)/,\n  // return expected tip based on matched info\n  handler(matched) {\n    const RE = new RegExp('^' + matched[2])\n    let result\n    domains.forEach(domain => {\n      if (RE.test(domain)) {\n        result = matched[1] + domain\n      }\n    })\n    return result\n  }\n})\n\nprompt.init()\n".trim(),w={data:function(){return{example:v}},mounted:function(){var e=new u(this.$refs.email);e.addRule({match:/([^@]+@)([^$]+)/,handler:function(e){var t=new RegExp("^"+e[2]),n=void 0;return f.forEach(function(a){t.test(a)&&(n=e[1]+a)}),n}}),e.init()},components:{Prism:d.a,Github:h.a}},E=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"container",attrs:{id:"app"}},[n("github",{attrs:{slug:"egoist/input-prompt"}}),e._v(" "),e._m(0),e._v(" "),n("div",{staticClass:"preview"},[n("div",{staticClass:"row"},[n("div",{staticClass:"column column-60"},[n("prism",{staticClass:"example",attrs:{language:"javascript"}},[e._v(e._s(e.example))])],1),e._v(" "),n("div",{staticClass:"column column-40"},[n("input",{ref:"email",staticClass:"prompt",attrs:{type:"email",placeholder:"Try to type your Gmail address..."}})])])])],1)},g=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h1",[n("span",[e._v("Input Prompt")]),e._v(" - ultra simple text auto-complete utility")])}],y={render:E,staticRenderFns:g},k=y,x=n(7),b=r,_=x(w,k,b,null,null),C=_.exports;new(n(3).a)({el:"#app",render:function(e){return e(C)}})},,,,function(e,t){}],[1]);
//# sourceMappingURL=client.24a2e46a.js.map